1.  Write  a  program  to  implement  push,  pop,  peep,  search  &  display  in  stack  through array  representation.



#include<stdio.h>
#include<stdlib.h>
#define max_size 5
int stack[max_size],top=-1;

void push()
{int item;
 if(top==(max_size-1))
 {printf("\nStack Overflow"); }
 else
 {
 printf("Enter the element to be inserted:\t");
 scanf("%d",&item);
 top=top+1;
 stack[top]=item;
 }
}

void pop()
{int item;
 if(top==-1)
 {printf("Stack Underflow"); }
 else
 {
 item=stack[top];
 top=top-1;
 printf("\nThe poped element: %d\t",item);
 }
}

void peep()
{if(top==-1)
 {printf("\nStack is empty"); }
 else
 {printf("The topmost element of the stack is %d",stack[top]); }
}

void search()
{
int i,ele;
if(top==-1)
{printf("\n Stack is empty"); }
else
{
printf("\nEnter the element to be searched :");
scanf("%d",&ele);
for(i=top;i>=0;i--)
{if (i==ele)
 {printf("Number found at the location = %d",i); }
 else
 {printf("Number not found"); }
  }
 }
}

void display()
{int i;
 if(top==-1)
 {printf("\nStack is Empty"); }
 else
 {
 printf("\nThe stack elements are:\n" );
 for(i=top;i>=0;i--)
 {printf("%d\n",stack[i]); }
 }
}

void main()
{int ch;
 do
 {
 printf("1.Push\n 2.Pop\n 3.Peep\n 4.Search\n 5.Display\n 6.Exit\n");
 printf("\nEnter your choice:\t");
 scanf("%d",&ch);
 switch(ch)
 {case 1: push();
                break;
  case 2: pop();
                break;
  case 3: peep();
                break;
  case 4: search();
                break;
  case 5: display();
                break;
  case 6: exit(0);
                break;
  default: printf("\nInvalid choice\n");
                 break;
  }
 }while(ch!='6');
getch();
}
