3.  Write  a  program  to  implement  insert,  delete,  search  &  display  in  circular  queue through  array  representation.



#include<stdio.h>
#include<conio.h>
#define max 3 
int q[10],front=0,rear=-1;

void insert()
{
int x;
if((front==0&&rear==max-1)||(front>0&&rear==front-1))
printf("Queue is overflow\n");
else
{printf("Enter element to be insert:");
 scanf("%d",&x);
 if(rear==max-1&&front>0)
 {rear=0;
  q[rear]=x;
  }
 else
 {if((front==0&&rear==-1)||(rear!=front-1))
  q[++rear]=x;
  }
 }
}

void delete()
{
int a;
if((front==0)&&(rear==-1))
{printf("Queue is underflow\n");
 getch();
 exit();
 }
if(front==rear)
{a=q[front];
 rear=-1;
 front=0;
 }
else if(front==max-1)
{a=q[front];
 front=0;
 }
else
 a=q[front++];
printf("Deleted element is:%d\n",a);
}

void search()
{
int j,i,ele;
printf("\nEnter the elements to be searched :");
scanf("%d",&ele);
if(front==0&&rear==-1)
{printf("\n Queue is empty"); }
else if(front>rear)
{for(i=0;i<=rear;i++)
  {if (i==ele)
   printf("Number found at the location = %d",i);}
 for(j=front;j<=max-1;j++)
  {if (j==ele)
   printf("Number found at the location = %d",j); }
  }
else
{for(i=front;i<=rear;i++)
 {if (i==ele)
  printf("Number found at the location = %d",i); }
  }
printf("\n");
}

void display()
{
int i,j;
if(front==0&&rear==-1)
{printf("Queue is underflow\n");
 getch();
 exit(); }
if(front>rear)
{for(i=0;i<=rear;i++)
 printf("\t%d",q[i]);
 for(j=front;j<=max-1;j++)
 printf("\t%d",q[j]);
 printf("\nrear is at %d\n",q[rear]);
 printf("\nfront is at %d\n",q[front]);
 }
else
{for(i=front;i<=rear;i++)
 {printf("\t%d",q[i]);
  }
 printf("\nrear is at %d\n",q[rear]);
 printf("\nfront is at %d\n",q[front]);
 }
printf("\n");
}

void main()
{
int ch;
clrscr();
printf("1.Insert\n2.Delete\n3.Search\n4.Display\n5.Exit\n");
while(1)
{printf("Enter your choice:");
 scanf("%d",&ch);
 switch(ch)
 {case 1: insert();
                break;
  case 2: delete();
                break;
  case 3: search();
                break;
  case 4: display();
                break;
  case 5: exit(1);
  default: printf("Invalid option\n");
  }
 }
getch();
}


